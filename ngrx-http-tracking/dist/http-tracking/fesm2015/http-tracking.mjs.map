{"version":3,"file":"http-tracking.mjs","sources":["../../../projects/http-tracking/src/lib/model/loading-state.ts","../../../projects/http-tracking/src/lib/+state/http-tracking-facade.stub.ts","../../../projects/http-tracking/src/lib/+state/http-tracking.actions.ts","../../../projects/http-tracking/src/lib/+state/http-tracking.reducer.ts","../../../projects/http-tracking/src/lib/function/is-defined.ts","../../../projects/http-tracking/src/lib/+state/http-tracking.selectors.ts","../../../projects/http-tracking/src/lib/function/is-error.ts","../../../projects/http-tracking/src/lib/function/map-action-typ-to-id.ts","../../../projects/http-tracking/src/lib/+state/http-tracking.facade.ts","../../../projects/http-tracking/src/lib/function/convert-response-to-error.ts","../../../projects/http-tracking/src/lib/function/http-tracking-actions.factory.ts","../../../projects/http-tracking/src/lib/+state/http-tracking.effects.ts","../../../projects/http-tracking/src/lib/http-tracking.module.ts","../../../projects/http-tracking/src/public-api.ts","../../../projects/http-tracking/src/http-tracking.ts"],"sourcesContent":["export enum LoadingState {\r\n  INIT = 'INIT',\r\n  LOADING = 'LOADING',\r\n  LOADED = 'LOADED',\r\n}\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { HttpTrackingEntity } from '../model/http-tracking-entity';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Action } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { TrackingAction } from '../function/http-tracking-actions.factory';\r\nimport { LoadingState } from '../model/loading-state';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface HttpTrackingResult<T1, T2> {}\r\n\r\n@Injectable()\r\nexport class HttpTrackingFacadeStub {\r\n  public getTracking(action: any) {\r\n    return of<HttpTrackingEntity>({\r\n      httpStatus: LoadingState.INIT,\r\n      action: '[fake] action 123',\r\n      tags: action['tags'],\r\n    });\r\n  }\r\n\r\n  public isLoading<T>(action: Action) {\r\n    return of<boolean>(false);\r\n  }\r\n\r\n  public isLoaded<T>(action: Action) {\r\n    return of<boolean>(true);\r\n  }\r\n\r\n  public isInit<T>(action: Action): Observable<boolean> {\r\n    return of<boolean>(false);\r\n  }\r\n\r\n  public getError<T>(action: Action): Observable<string | null> {\r\n    return of(null);\r\n  }\r\n\r\n  public clearGloballyHandledErrors() {}\r\n\r\n  public clearTrackingMulti(actions: Action[]) {}\r\n\r\n  public getGlobalLoading() {\r\n    return of<boolean>(false);\r\n  }\r\n\r\n  public getGlobalErrors() {\r\n    return of<Error[]>([]);\r\n  }\r\n\r\n  public getResolved<T1, T2>(action: TrackingAction<T1, T2>) {\r\n    return of<HttpTrackingResult<T1, T2>>();\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { HttpTrackingEntity } from '../model/http-tracking-entity';\r\n\r\nconst ACTIONS_NAMESPACE = 'Http Tracking';\r\n\r\nexport const trackHttpRequest = createAction(\r\n  `[${ACTIONS_NAMESPACE}] TrackHttpRequest`,\r\n  props<HttpTrackingEntity>()\r\n);\r\n\r\nexport const clearGloballyHandledErrors = createAction(\r\n  `[${ACTIONS_NAMESPACE}] ClearGloballyHandledErrors`\r\n);\r\n","import * as HttpTrackingActions from './http-tracking.actions';\r\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { HttpTrackingEntity } from '../model/http-tracking-entity';\r\nimport { LoadingState } from '../model/loading-state';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nexport const HTTP_TRACKING_FEATURE_KEY = 'httpTracking';\r\n\r\nexport type State = EntityState<HttpTrackingEntity>;\r\n\r\nexport const httpTrackingAdapter: EntityAdapter<HttpTrackingEntity> =\r\n  createEntityAdapter<HttpTrackingEntity>({\r\n    selectId: (x) => x.action,\r\n  });\r\n\r\nexport const initialState: State = httpTrackingAdapter.getInitialState();\r\n\r\nexport const httpTrackingReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    HttpTrackingActions.trackHttpRequest,\r\n    (state, { action, httpStatus, tags }) =>\r\n      httpTrackingAdapter.upsertOne({ action, httpStatus, tags }, state)\r\n  ),\r\n  on(HttpTrackingActions.clearGloballyHandledErrors, (state) => {\r\n    const actionsToUpdate = (<string[]>state.ids)\r\n      .map((id) => state.entities[id])\r\n      .filter(\r\n        (httpTracking) =>\r\n          !!httpTracking &&\r\n          (<Error>httpTracking?.httpStatus)?.message &&\r\n          httpTracking.tags.includes('global')\r\n      )\r\n      .map(\r\n        (tracking) =>\r\n          <HttpTrackingEntity>{\r\n            ...tracking,\r\n            httpStatus: LoadingState.INIT,\r\n          }\r\n      );\r\n    return httpTrackingAdapter.upsertMany(actionsToUpdate, state);\r\n  })\r\n);\r\n","export const isDefined = <T>(val: T): val is T =>\r\n  val !== null && val !== undefined;\r\n","import {\r\n  HTTP_TRACKING_FEATURE_KEY,\r\n  httpTrackingAdapter,\r\n  State,\r\n} from './http-tracking.reducer';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { isDefined } from '../function/is-defined';\r\nimport { LoadingState } from '../model/loading-state';\r\n\r\nconst selectFeature = createFeatureSelector<State>(HTTP_TRACKING_FEATURE_KEY);\r\n\r\nconst httpTrackingSelectors = httpTrackingAdapter.getSelectors(selectFeature);\r\n\r\nexport const selectOneHttpTracking = (id: string) =>\r\n  createSelector(httpTrackingSelectors.selectEntities, (s) => s[id]);\r\n\r\nexport const selectHttpTrackingByTag = (tag: string) =>\r\n  createSelector(httpTrackingSelectors.selectAll, (s) =>\r\n    s.filter((httpTracking) => httpTracking.tags.includes(tag))\r\n  );\r\n\r\nexport const selectErrorsByTag = (tag: string) =>\r\n  createSelector(httpTrackingSelectors.selectAll, (s) =>\r\n    s\r\n      .filter(\r\n        (httpTracking) =>\r\n          isDefined((<Error>httpTracking.httpStatus)?.message) &&\r\n          httpTracking.tags.includes(tag)\r\n      )\r\n      .map((httpTracking) => <Error>httpTracking.httpStatus)\r\n  );\r\n\r\nexport const selectLoadingByTag = (tag: string) =>\r\n  createSelector(httpTrackingSelectors.selectAll, (s) =>\r\n    s.some(\r\n      (httpTracking) =>\r\n        httpTracking.httpStatus === LoadingState.LOADING &&\r\n        httpTracking.tags.includes(tag)\r\n    )\r\n  );\r\n","export const isError = (value: any): value is Error =>\r\n  !!value && value.name && value.message;\r\n","export const mapActionTypeToId = (actionType: string) =>\r\n  actionType\r\n    .toLowerCase()\r\n    .replace(/success/g, '')\r\n    .replace(/failure/g, '')\r\n    .trim()\r\n    .replace(/ /g, '-');\r\n","import * as HttpTrackingActions from './http-tracking.actions';\r\nimport * as HttpTrackingSelectors from './http-tracking.selectors';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { HttpTrackingEntity } from '../model/http-tracking-entity';\r\nimport { debounceTime, filter, map, take } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { isError } from '../function/is-error';\r\nimport { mapActionTypeToId } from '../function/map-action-typ-to-id';\r\nimport { TrackingAction } from '../function/http-tracking-actions.factory';\r\nimport { LoadingState } from '../model/loading-state';\r\n\r\nexport interface HttpTrackingResult<T1, T2> {\r\n  action: TrackingAction<T1, T2>;\r\n  success: boolean;\r\n  error?: Error;\r\n}\r\n\r\n@Injectable()\r\nexport class HttpTrackingFacade {\r\n  constructor(private store: Store) {}\r\n\r\n  public getTracking(\r\n    action: Action\r\n  ): Observable<HttpTrackingEntity | undefined> {\r\n    return this.store.select(\r\n      HttpTrackingSelectors.selectOneHttpTracking(\r\n        mapActionTypeToId(action.type)\r\n      )\r\n    );\r\n  }\r\n\r\n  public isLoading<T>(action: Action): Observable<boolean> {\r\n    return this.getTracking(action).pipe(\r\n      map((x) => x?.httpStatus === LoadingState.LOADING)\r\n    );\r\n  }\r\n\r\n  public isLoaded<T>(action: Action): Observable<boolean> {\r\n    return this.getTracking(action).pipe(\r\n      map((x) => x?.httpStatus === LoadingState.LOADED)\r\n    );\r\n  }\r\n\r\n  public isInit<T>(action: Action): Observable<boolean> {\r\n    return this.getTracking(action).pipe(\r\n      map((x) => !x || x.httpStatus === LoadingState.INIT)\r\n    );\r\n  }\r\n\r\n  public getError<T>(action: Action): Observable<string | null> {\r\n    return this.getTracking(action).pipe(\r\n      filter((x) => isError(x?.httpStatus)),\r\n      map((x) => (<Error>x?.httpStatus).message)\r\n    );\r\n  }\r\n\r\n  public isTagLoading(tag: string) {\r\n    return this.store\r\n      .select(HttpTrackingSelectors.selectLoadingByTag(tag))\r\n      .pipe(debounceTime(100));\r\n  }\r\n\r\n  public getTagErrors(tag: string) {\r\n    return this.store\r\n      .select(HttpTrackingSelectors.selectErrorsByTag(tag))\r\n      .pipe(debounceTime(100));\r\n  }\r\n\r\n  public clearGloballyHandledErrors() {\r\n    this.store.dispatch(HttpTrackingActions.clearGloballyHandledErrors());\r\n  }\r\n\r\n  public clearTrackingMulti(actions: Action[]) {\r\n    actions.forEach((action: any) => {\r\n      this.store.dispatch(\r\n        HttpTrackingActions.trackHttpRequest({\r\n          action: mapActionTypeToId(action.type),\r\n          httpStatus: LoadingState.INIT,\r\n          tags: action['tags'],\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  public getGlobalLoading() {\r\n    return this.store\r\n      .select(HttpTrackingSelectors.selectLoadingByTag('global'))\r\n      .pipe(debounceTime(300));\r\n  }\r\n\r\n  public getGlobalErrors() {\r\n    return this.store\r\n      .select(HttpTrackingSelectors.selectErrorsByTag('global'))\r\n      .pipe(debounceTime(300));\r\n  }\r\n\r\n  public getResolved<T1, T2>(\r\n    action: TrackingAction<T1, T2>\r\n  ): Observable<HttpTrackingResult<T1, T2>> {\r\n    return this.getTracking(action.loading).pipe(\r\n      filter((tracking) => !!tracking),\r\n      map((tracking) => (<HttpTrackingEntity>tracking).httpStatus),\r\n      filter(\r\n        (httpStatus) =>\r\n          httpStatus === LoadingState.LOADED || isError(httpStatus)\r\n      ),\r\n      take(1),\r\n      map((httpStatus) => {\r\n        const retVal = <HttpTrackingResult<T1, T2>>{\r\n          action,\r\n          success: httpStatus === LoadingState.LOADED,\r\n        };\r\n        if (isError(httpStatus)) {\r\n          retVal.error = httpStatus;\r\n        }\r\n        return retVal;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getMultiResolved<T1, T2>(\r\n    actions: TrackingAction<T1, T2>[]\r\n  ): Observable<HttpTrackingResult<T1, T2>[]> {\r\n    const results = actions.map((a) => this.getResolved(a));\r\n    return forkJoin(results);\r\n  }\r\n}\r\n","export const convertResponseToError = (err: any, fallbackMessage: string) => {\r\n  let errorMsg = '';\r\n  if (err?.name === 'HttpErrorResponse' && typeof err.error === 'string') {\r\n    errorMsg = err.error;\r\n  } else if (\r\n    err?.name === 'HttpErrorResponse' &&\r\n    typeof err?.error?.error === 'string'\r\n  ) {\r\n    errorMsg = err.error.error;\r\n  }\r\n\r\n  return new Error(!errorMsg ? fallbackMessage : errorMsg);\r\n};\r\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { Action, ActionCreator, Creator, props } from '@ngrx/store';\r\nimport {\r\n  ActionCreatorProps,\r\n  FunctionWithParametersType,\r\n  NotAllowedCheck,\r\n  TypedAction,\r\n} from '@ngrx/store/src/models';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\nimport { HttpTrackingEntity } from '../model/http-tracking-entity';\r\nimport { LoadingState } from '../model/loading-state';\r\nimport { convertResponseToError } from './convert-response-to-error';\r\n\r\nfunction createTrackingAction<T extends string>(\r\n  type: T,\r\n  hasGlobalTag: boolean,\r\n  tags: string[],\r\n  httpStatus: LoadingState\r\n): ActionCreator<T, () => TypedAction<T>>;\r\n\r\nfunction createTrackingAction<T extends string, P extends object>(\r\n  type: T,\r\n  hasGlobalTag: boolean,\r\n  tags: string[],\r\n  httpStatus: LoadingState,\r\n  config: ActionCreatorProps<P> | null\r\n): ActionCreator<T, (props?: P) => P & TypedAction<T>>;\r\n\r\nfunction createTrackingAction<\r\n  T extends string,\r\n  P extends any[],\r\n  R extends object\r\n>(\r\n  type: T,\r\n  hasGlobalTag: boolean,\r\n  tags: string[],\r\n  httpStatus: LoadingState,\r\n  creator: Creator<P, R> & NotAllowedCheck<R>\r\n): FunctionWithParametersType<P, R & TypedAction<T>> & TypedAction<T>;\r\n\r\nfunction createTrackingAction<T extends string, C extends Creator>(\r\n  type: T,\r\n  hasGlobalTag: boolean,\r\n  tags: string[],\r\n  httpStatus: LoadingState,\r\n  config?: { _as: 'props' } | C\r\n): ActionCreator<T> {\r\n  if (typeof config === 'function') {\r\n    return defineType(\r\n      type,\r\n      (...args: any[]) =>\r\n        <HttpTrackingEntity & TypedAction<T>>{\r\n          ...config(...args),\r\n          type,\r\n          httpStatus,\r\n          tags: hasGlobalTag ? ['global', ...tags] : [...tags],\r\n        }\r\n    );\r\n  }\r\n  const as = config ? config._as : 'empty';\r\n  switch (as) {\r\n    case 'empty':\r\n      return defineType(\r\n        type,\r\n        () =>\r\n          <HttpTrackingEntity & TypedAction<T>>{\r\n            type,\r\n            httpStatus,\r\n            tags: hasGlobalTag ? ['global', ...tags] : [...tags],\r\n          }\r\n      );\r\n    case 'props':\r\n      return defineType(\r\n        type,\r\n        // eslint-disable-next-line @typescript-eslint/no-shadow\r\n        (props: object) =>\r\n          <HttpTrackingEntity & TypedAction<T>>{\r\n            ...props,\r\n            type,\r\n            httpStatus,\r\n            tags: hasGlobalTag ? ['global', ...tags] : [...tags],\r\n          }\r\n      );\r\n    default:\r\n      throw new Error('Unexpected config.');\r\n  }\r\n}\r\n\r\nfunction createTrackingFailureAction<\r\n  T extends string,\r\n  err extends any,\r\n  fallbackMsg extends string\r\n>(\r\n  type: T,\r\n  hasGlobalTag: boolean,\r\n  tags: string[],\r\n  httpStatus: (err: any, fallbackMsg: string) => Error\r\n): ActionCreator<T, (err: any, fallbackMsg: string) => TypedAction<T>>;\r\n\r\nfunction createTrackingFailureAction<\r\n  T extends string,\r\n  err extends any,\r\n  fallbackMsg extends string,\r\n  P extends object\r\n>(\r\n  type: T,\r\n  hasGlobalTag: boolean,\r\n  tags: string[],\r\n  httpStatus: (err: any, fallbackMsg: string) => Error,\r\n  config: ActionCreatorProps<P> & NotAllowedCheck<P>\r\n): ActionCreator<\r\n  T,\r\n  (\r\n    err: any,\r\n    fallbackMsg: string,\r\n    props: P & NotAllowedCheck<P>\r\n  ) => P & TypedAction<T>\r\n>;\r\n\r\nfunction createTrackingFailureAction<T extends string, C extends Creator>(\r\n  type: T,\r\n  hasGlobalTag: boolean,\r\n  tags: string[],\r\n  httpStatus: (err: any, fallbackMsg: string) => Error,\r\n  config?: { _as: 'props' } | C\r\n): ActionCreator<T> {\r\n  if (typeof config === 'function') {\r\n    return defineType(\r\n      type,\r\n      (err: any, fallbackMsg: string, ...args: any[]) =>\r\n        <HttpTrackingEntity & TypedAction<T>>{\r\n          httpStatus: httpStatus(err, fallbackMsg),\r\n          ...config(...args),\r\n          type,\r\n          tags: hasGlobalTag ? ['global', ...tags] : [...tags],\r\n        }\r\n    );\r\n  }\r\n  const as = config ? config._as : 'empty';\r\n  switch (as) {\r\n    case 'empty':\r\n      return defineType(\r\n        type,\r\n        (err: any, fallbackMsg: string) =>\r\n          <HttpTrackingEntity & TypedAction<T>>{\r\n            httpStatus: httpStatus(err, fallbackMsg),\r\n            type,\r\n            tags: hasGlobalTag ? ['global', ...tags] : [...tags],\r\n          }\r\n      );\r\n    case 'props':\r\n      return defineType(\r\n        type,\r\n        // eslint-disable-next-line @typescript-eslint/no-shadow\r\n        (err: any, fallbackMsg: string, props: object) =>\r\n          <HttpTrackingEntity & TypedAction<T>>{\r\n            httpStatus: httpStatus(err, fallbackMsg),\r\n            ...props,\r\n            type,\r\n            tags: hasGlobalTag ? ['global', ...tags] : [...tags],\r\n          }\r\n      );\r\n    default:\r\n      throw new Error('Unexpected config.');\r\n  }\r\n}\r\n\r\nfunction defineType<T extends string>(\r\n  type: T,\r\n  creator: Creator\r\n): ActionCreator<T> {\r\n  return <ActionCreator<T>>Object.defineProperty(creator, 'type', {\r\n    value: type,\r\n    writable: false,\r\n  });\r\n}\r\n\r\nexport const createTrackingActions = <TRequest, TPayload>(\r\n  namespace: string,\r\n  actionName: string,\r\n  hasGlobalTag = true,\r\n  tags: string[] = [namespace]\r\n): TrackingAction<TRequest, TPayload> => ({\r\n  loading: createTrackingAction(\r\n    `[${namespace}] ${actionName}`,\r\n    hasGlobalTag,\r\n    tags,\r\n    LoadingState.LOADING,\r\n    props<{ request: TRequest }>()\r\n  ),\r\n  loaded: createTrackingAction(\r\n    `[${namespace}] ${actionName}Success`,\r\n    hasGlobalTag,\r\n    tags,\r\n    LoadingState.LOADED,\r\n    props<{ payload: TPayload }>()\r\n  ),\r\n  failure: createTrackingFailureAction(\r\n    `[${namespace}] ${actionName}Failure`,\r\n    hasGlobalTag,\r\n    tags,\r\n    convertResponseToError\r\n  ),\r\n});\r\n\r\nexport interface TrackingAction<TRequest, TPayload> {\r\n  loading: ((attr?: {\r\n    request: TRequest;\r\n  }) => { request: TRequest } & TypedAction<string>) &\r\n    TypedAction<string>;\r\n  loaded: ((attr?: {\r\n    payload: TPayload;\r\n  }) => { payload: TPayload } & TypedAction<string>) &\r\n    TypedAction<string>;\r\n  failure: ActionCreator<\r\n    string,\r\n    (httpStatus: Error, fallbackErrorMsg: string) => TypedAction<string>\r\n  >;\r\n}\r\n\r\nexport const createTrackingEffect = <TRequest, TPayload>(\r\n  actions$: Actions,\r\n  tackingAction: TrackingAction<TRequest, TPayload>,\r\n  serviceCall: (request: TRequest) => Observable<TPayload>,\r\n  fallbackErrorMsg: string,\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  successFn: (httpContext: { request: TRequest; payload: TPayload }) => void = (\r\n    httpContext\r\n  ) => {}\r\n) =>\r\n  createEffect(() =>\r\n    actions$.pipe(\r\n      ofType(tackingAction.loading),\r\n      switchMap((action) =>\r\n        serviceCall(action.request).pipe(\r\n          map((payload) => tackingAction.loaded({ payload })),\r\n          tap((successAction) =>\r\n            successFn({\r\n              request: action.request,\r\n              payload: successAction.payload,\r\n            })\r\n          ),\r\n          catchError((e) => {\r\n            console.error(e);\r\n            const subjectMsg = new Subject<Action>();\r\n\r\n            if (\r\n              e.error instanceof Blob &&\r\n              e.error.type === 'application/json'\r\n            ) {\r\n              e.error.text().then((errorBlobText: string) => {\r\n                const errorJson = JSON.parse(errorBlobText);\r\n                subjectMsg.next(tackingAction.failure(e, errorJson.error));\r\n              });\r\n            } else {\r\n              return of(tackingAction.failure(e, fallbackErrorMsg));\r\n            }\r\n            return subjectMsg;\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { filter, tap } from 'rxjs/operators';\r\nimport { mapActionTypeToId } from '../function/map-action-typ-to-id';\r\nimport { LoadingState } from '../model/loading-state';\r\nimport { trackHttpRequest } from './http-tracking.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpTrackingEffects {\r\n  trackHttpRequest$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        filter(\r\n          (action: any) =>\r\n            action['httpStatus'] !== undefined &&\r\n            action.type !== trackHttpRequest.type\r\n        ),\r\n        tap((action) => {\r\n          if (\r\n            action['httpStatus'] === LoadingState.LOADED &&\r\n            !action.type.toLowerCase().includes('success') &&\r\n            !action.type.toLowerCase().includes('failure')\r\n          ) {\r\n            if (window && window.console) {\r\n              window.console.log(\r\n                '%cHTTP Request Loading Tracker could not find Success/Failure on action.type',\r\n                'background: yellow; font-size: large;'\r\n              );\r\n            }\r\n          }\r\n\r\n          this.store.dispatch(\r\n            trackHttpRequest({\r\n              httpStatus: action['httpStatus'],\r\n              action: mapActionTypeToId(action.type),\r\n              tags: action['tags'],\r\n            })\r\n          );\r\n        })\r\n      ),\r\n    {\r\n      dispatch: false,\r\n    }\r\n  );\r\n\r\n  constructor(private actions$: Actions, private store: Store) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { HttpTrackingEffects } from './+state/http-tracking.effects';\r\nimport { HttpTrackingFacade } from './+state/http-tracking.facade';\r\nimport {\r\n  httpTrackingReducer,\r\n  HTTP_TRACKING_FEATURE_KEY,\r\n} from './+state/http-tracking.reducer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature(HTTP_TRACKING_FEATURE_KEY, httpTrackingReducer),\r\n    EffectsModule.forFeature([HttpTrackingEffects]),\r\n  ],\r\n  providers: [HttpTrackingFacade],\r\n})\r\nexport class HttpTrackingModule {}\r\n","/*\r\n * Public API Surface of http-tracking\r\n */\r\nexport * from './lib/+state/http-tracking-facade.stub';\r\nexport * from './lib/+state/http-tracking.facade';\r\nexport * from './lib/function/http-tracking-actions.factory';\r\nexport * from './lib/http-tracking.module';\r\nexport * from './lib/model/http-tracking-entity';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["HttpTrackingActions.trackHttpRequest","HttpTrackingActions.clearGloballyHandledErrors","HttpTrackingSelectors.selectOneHttpTracking","HttpTrackingSelectors.selectLoadingByTag","HttpTrackingSelectors.selectErrorsByTag","i1","i2"],"mappings":"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"}