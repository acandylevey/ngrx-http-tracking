import * as HttpTrackingActions from './http-tracking.actions';
import { createEntityAdapter } from '@ngrx/entity';
import { LoadingState } from '../model/loading-state';
import { createReducer, on } from '@ngrx/store';
export const HTTP_TRACKING_FEATURE_KEY = 'httpTracking';
export const httpTrackingAdapter = createEntityAdapter({
    selectId: (x) => x.action,
});
export const initialState = httpTrackingAdapter.getInitialState();
export const httpTrackingReducer = createReducer(initialState, on(HttpTrackingActions.trackHttpRequest, (state, { action, httpStatus, tags }) => httpTrackingAdapter.upsertOne({ action, httpStatus, tags }, state)), on(HttpTrackingActions.clearGloballyHandledErrors, (state) => {
    const actionsToUpdate = state.ids
        .map((id) => state.entities[id])
        .filter((httpTracking) => !!httpTracking &&
        httpTracking?.httpStatus?.message &&
        httpTracking.tags.includes('global'))
        .map((tracking) => ({
        ...tracking,
        httpStatus: LoadingState.INIT,
    }));
    return httpTrackingAdapter.upsertMany(actionsToUpdate, state);
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC10cmFja2luZy5yZWR1Y2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmdyeC1odHRwLXRyYWNraW5nL3NyYy9saWIvK3N0YXRlL2h0dHAtdHJhY2tpbmcucmVkdWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssbUJBQW1CLE1BQU0seUJBQXlCLENBQUM7QUFDL0QsT0FBTyxFQUFFLG1CQUFtQixFQUE4QixNQUFNLGNBQWMsQ0FBQztBQUUvRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFaEQsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsY0FBYyxDQUFDO0FBSXhELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUM5QixtQkFBbUIsQ0FBcUI7SUFDdEMsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTTtDQUMxQixDQUFDLENBQUM7QUFFTCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQVUsbUJBQW1CLENBQUMsZUFBZSxFQUFFLENBQUM7QUFFekUsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsYUFBYSxDQUM5QyxZQUFZLEVBQ1osRUFBRSxDQUNBLG1CQUFtQixDQUFDLGdCQUFnQixFQUNwQyxDQUFDLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUN0QyxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUNyRSxFQUNELEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQywwQkFBMEIsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO0lBQzNELE1BQU0sZUFBZSxHQUFjLEtBQUssQ0FBQyxHQUFJO1NBQzFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUMvQixNQUFNLENBQ0wsQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUNmLENBQUMsQ0FBQyxZQUFZO1FBQ04sWUFBWSxFQUFFLFVBQVcsRUFBRSxPQUFPO1FBQzFDLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUN2QztTQUNBLEdBQUcsQ0FDRixDQUFDLFFBQVEsRUFBRSxFQUFFLENBQ1gsQ0FBb0I7UUFDbEIsR0FBRyxRQUFRO1FBQ1gsVUFBVSxFQUFFLFlBQVksQ0FBQyxJQUFJO0tBQzlCLENBQUEsQ0FDSixDQUFDO0lBQ0osT0FBTyxtQkFBbUIsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ2hFLENBQUMsQ0FBQyxDQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBIdHRwVHJhY2tpbmdBY3Rpb25zIGZyb20gJy4vaHR0cC10cmFja2luZy5hY3Rpb25zJztcclxuaW1wb3J0IHsgY3JlYXRlRW50aXR5QWRhcHRlciwgRW50aXR5QWRhcHRlciwgRW50aXR5U3RhdGUgfSBmcm9tICdAbmdyeC9lbnRpdHknO1xyXG5pbXBvcnQgeyBIdHRwVHJhY2tpbmdFbnRpdHkgfSBmcm9tICcuLi9tb2RlbC9odHRwLXRyYWNraW5nLWVudGl0eSc7XHJcbmltcG9ydCB7IExvYWRpbmdTdGF0ZSB9IGZyb20gJy4uL21vZGVsL2xvYWRpbmctc3RhdGUnO1xyXG5pbXBvcnQgeyBjcmVhdGVSZWR1Y2VyLCBvbiB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuXHJcbmV4cG9ydCBjb25zdCBIVFRQX1RSQUNLSU5HX0ZFQVRVUkVfS0VZID0gJ2h0dHBUcmFja2luZyc7XHJcblxyXG5leHBvcnQgdHlwZSBTdGF0ZSA9IEVudGl0eVN0YXRlPEh0dHBUcmFja2luZ0VudGl0eT47XHJcblxyXG5leHBvcnQgY29uc3QgaHR0cFRyYWNraW5nQWRhcHRlcjogRW50aXR5QWRhcHRlcjxIdHRwVHJhY2tpbmdFbnRpdHk+ID1cclxuICBjcmVhdGVFbnRpdHlBZGFwdGVyPEh0dHBUcmFja2luZ0VudGl0eT4oe1xyXG4gICAgc2VsZWN0SWQ6ICh4KSA9PiB4LmFjdGlvbixcclxuICB9KTtcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IFN0YXRlID0gaHR0cFRyYWNraW5nQWRhcHRlci5nZXRJbml0aWFsU3RhdGUoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBodHRwVHJhY2tpbmdSZWR1Y2VyID0gY3JlYXRlUmVkdWNlcihcclxuICBpbml0aWFsU3RhdGUsXHJcbiAgb24oXHJcbiAgICBIdHRwVHJhY2tpbmdBY3Rpb25zLnRyYWNrSHR0cFJlcXVlc3QsXHJcbiAgICAoc3RhdGUsIHsgYWN0aW9uLCBodHRwU3RhdHVzLCB0YWdzIH0pID0+XHJcbiAgICAgIGh0dHBUcmFja2luZ0FkYXB0ZXIudXBzZXJ0T25lKHsgYWN0aW9uLCBodHRwU3RhdHVzLCB0YWdzIH0sIHN0YXRlKVxyXG4gICksXHJcbiAgb24oSHR0cFRyYWNraW5nQWN0aW9ucy5jbGVhckdsb2JhbGx5SGFuZGxlZEVycm9ycywgKHN0YXRlKSA9PiB7XHJcbiAgICBjb25zdCBhY3Rpb25zVG9VcGRhdGUgPSAoPHN0cmluZ1tdPnN0YXRlLmlkcylcclxuICAgICAgLm1hcCgoaWQpID0+IHN0YXRlLmVudGl0aWVzW2lkXSlcclxuICAgICAgLmZpbHRlcihcclxuICAgICAgICAoaHR0cFRyYWNraW5nKSA9PlxyXG4gICAgICAgICAgISFodHRwVHJhY2tpbmcgJiZcclxuICAgICAgICAgICg8RXJyb3I+aHR0cFRyYWNraW5nPy5odHRwU3RhdHVzKT8ubWVzc2FnZSAmJlxyXG4gICAgICAgICAgaHR0cFRyYWNraW5nLnRhZ3MuaW5jbHVkZXMoJ2dsb2JhbCcpXHJcbiAgICAgIClcclxuICAgICAgLm1hcChcclxuICAgICAgICAodHJhY2tpbmcpID0+XHJcbiAgICAgICAgICA8SHR0cFRyYWNraW5nRW50aXR5PntcclxuICAgICAgICAgICAgLi4udHJhY2tpbmcsXHJcbiAgICAgICAgICAgIGh0dHBTdGF0dXM6IExvYWRpbmdTdGF0ZS5JTklULFxyXG4gICAgICAgICAgfVxyXG4gICAgICApO1xyXG4gICAgcmV0dXJuIGh0dHBUcmFja2luZ0FkYXB0ZXIudXBzZXJ0TWFueShhY3Rpb25zVG9VcGRhdGUsIHN0YXRlKTtcclxuICB9KVxyXG4pO1xyXG4iXX0=